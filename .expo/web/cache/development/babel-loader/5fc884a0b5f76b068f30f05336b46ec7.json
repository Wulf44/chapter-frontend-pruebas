{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"../../Themed\";\nimport { IconButton } from \"../../StyledIconButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Character = function (_Component) {\n  _inherits(Character, _Component);\n\n  var _super = _createSuper(Character);\n\n  function Character(props) {\n    var _this;\n\n    _classCallCheck(this, Character);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isEditable: false\n    };\n    return _this;\n  }\n\n  _createClass(Character, [{\n    key: \"render\",\n    value: function render() {\n      var character = this.props.character;\n      var isEditable = this.state.isEditable;\n      var body = character.body,\n          image = character.image,\n          title = character.title;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.tinyLogo,\n          source: {\n            uri: image\n          }\n        }), _jsxs(View, {\n          style: styles.textContainer,\n          children: [_jsx(Text, {\n            style: styles.textFields,\n            lightColor: \"white\",\n            darkColor: \"white\",\n            children: title\n          }), isEditable && _jsx(Text, {\n            style: styles.textFields,\n            lightColor: \"white\",\n            darkColor: \"white\",\n            children: body\n          }), !isEditable && _jsxs(View, {\n            style: styles.buttonContainer,\n            children: [_jsx(IconButton, {\n              name: \"pencil\",\n              size: 30,\n              color: \"red\"\n            }), _jsx(IconButton, {\n              name: \"trash\",\n              size: 30,\n              color: \"red\"\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Character;\n}(Component);\n\nexport { Character as default };\nvar styles = StyleSheet.create({\n  tinyLogo: {\n    height: 400\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    margin: 16,\n    padding: 8,\n    width: 400\n  },\n  textContainer: {\n    flexDirection: 'column'\n  },\n  textFields: {\n    height: 36\n  }\n});","map":{"version":3,"sources":["/Users/davidproano/Documents/Projects/chapter-frontend-pruebas/components/characters/character/index.js"],"names":["React","Component","Text","IconButton","Character","props","state","isEditable","character","body","image","title","styles","container","tinyLogo","uri","textContainer","textFields","buttonContainer","StyleSheet","create","height","flexDirection","flex","backgroundColor","margin","padding","width"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,IAAT;AACA,SAASC,UAAT;;;;IAGqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAFe;AAKlB;;;;WAED,kBAAS;AACL,UAAQC,SAAR,GAAsB,KAAKH,KAA3B,CAAQG,SAAR;AACA,UAAQD,UAAR,GAAuB,KAAKD,KAA5B,CAAQC,UAAR;AACA,UAAQE,IAAR,GAA+BD,SAA/B,CAAQC,IAAR;AAAA,UAAcC,KAAd,GAA+BF,SAA/B,CAAcE,KAAd;AAAA,UAAqBC,KAArB,GAA+BH,SAA/B,CAAqBG,KAArB;AACA,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACI,KAAC,KAAD;AACI,UAAA,KAAK,EAAED,MAAM,CAACE,QADlB;AAEI,UAAA,MAAM,EAAE;AACJC,YAAAA,GAAG,EAAEL;AADD;AAFZ,UADJ,EAOI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,MAAM,CAACI,aAApB;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,UAApB;AAAgC,YAAA,UAAU,EAAC,OAA3C;AAAmD,YAAA,SAAS,EAAC,OAA7D;AAAA,sBAAsEN;AAAtE,YADJ,EAEKJ,UAAU,IAAI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEK,MAAM,CAACK,UAApB;AAAgC,YAAA,UAAU,EAAC,OAA3C;AAAmD,YAAA,SAAS,EAAC,OAA7D;AAAA,sBAAsER;AAAtE,YAFnB,EAGK,CAACF,UAAD,IAAe,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEK,MAAM,CAACM,eAApB;AAAA,uBACZ,KAAC,UAAD;AAAY,cAAA,IAAI,EAAC,QAAjB;AACI,cAAA,IAAI,EAAE,EADV;AAEI,cAAA,KAAK,EAAC;AAFV,cADY,EAKZ,KAAC,UAAD;AAAY,cAAA,IAAI,EAAC,OAAjB;AACI,cAAA,IAAI,EAAE,EADV;AAEI,cAAA,KAAK,EAAC;AAFV,cALY;AAAA,YAHpB;AAAA,UAPJ;AAAA,QADJ;AAwBH;;;;EApCkCjB,S;;SAAlBG,S;AAuCrB,IAAMQ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,QAAQ,EAAE;AACNO,IAAAA,MAAM,EAAE;AADF,GADmB;AAI7BH,EAAAA,eAAe,EAAE;AACbI,IAAAA,aAAa,EAAE;AADF,GAJY;AAO7BT,EAAAA,SAAS,EAAE;AAAEU,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,eAAe,EAAE,OAA5B;AAAqCC,IAAAA,MAAM,EAAE,EAA7C;AAAiDC,IAAAA,OAAO,EAAE,CAA1D;AAA6DC,IAAAA,KAAK,EAAE;AAApE,GAPkB;AAQ7BX,EAAAA,aAAa,EAAE;AAAEM,IAAAA,aAAa,EAAE;AAAjB,GARc;AAS7BL,EAAAA,UAAU,EAAE;AAAEI,IAAAA,MAAM,EAAE;AAAV;AATiB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Image, StyleSheet, View } from 'react-native'\nimport { Text } from '../../Themed';\nimport { IconButton } from '../../StyledIconButton';\n\n\nexport default class Character extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditable: false\n        }\n    }\n\n    render() {\n        const { character } = this.props;\n        const { isEditable } = this.state;\n        const { body, image, title } = character;\n        return (\n            <View style={styles.container}>\n                <Image\n                    style={styles.tinyLogo}\n                    source={{\n                        uri: image,\n                    }}\n                />\n                <View style={styles.textContainer}>\n                    <Text style={styles.textFields} lightColor=\"white\" darkColor='white'>{title}</Text>\n                    {isEditable && <Text style={styles.textFields} lightColor=\"white\" darkColor='white'>{body}</Text>}\n                    {!isEditable && <View style={styles.buttonContainer}>\n                        <IconButton name=\"pencil\"\n                            size={30}\n                            color=\"red\"\n                        />\n                        <IconButton name=\"trash\"\n                            size={30}\n                            color=\"red\"\n                        />\n                    </View>}\n                </View>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    tinyLogo: {\n        height: 400\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n    },\n    container: { flex: 1, backgroundColor: 'black', margin: 16, padding: 8, width: 400 },\n    textContainer: { flexDirection: 'column' },\n    textFields: { height: 36 }\n})\n"]},"metadata":{},"sourceType":"module"}